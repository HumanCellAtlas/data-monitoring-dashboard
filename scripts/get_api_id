#!/bin/bash

set -e

usage="usage: $0 [--json] <api_gateway_name> <target_lambda_name>"

JSON_FORMAT=0

if [[ "$#" = 0 ]]; then
    echo "$usage"
    exit 1
fi

format_response() {
    api_id="$1"
    if [[ "$JSON_FORMAT" = 1 ]]; then
        echo "{\"api_id\":\"$api_id\"}"
    else
        echo $api_id
    fi
}

while (( "$#" )); do
    case "$1" in
        -j|--json)
            eval "$(jq -r '@sh "api_gateway_name=\(.api_gateway_name) lambda_name=\(.lambda_name)"')"
            export api_gateway_name
            export lambda_name
            JSON_FORMAT=1
            shift 1
            break
        ;;
    *)
        if [[ "$#" = 2 ]]; then
            export api_gateway_name="$1"
            export lambda_name="$2"
            shift 2
        else
            echo "$usage"
            exit 1
        fi
        ;;
    esac
done

lambda_arn=$(aws lambda list-functions | jq -r '.Functions[] | select(.FunctionName==env.lambda_name) | .FunctionArn')

# Identify the id of our API Gateway by finding a gateway with a REST API with resource with an integration that
# executes our lambda.
for api_id in $(aws apigateway get-rest-apis | jq -r ".items[] | select(.name==\"${api_gateway_name}\") | .id") ; do
    for resource_id in $(aws apigateway get-resources --rest-api-id $api_id | jq -r .items[].id); do
        aws apigateway get-integration --rest-api-id $api_id --resource-id $resource_id --http-method GET >/dev/null 2>&1 || continue
        uri=$(aws apigateway get-integration --rest-api-id $api_id --resource-id $resource_id --http-method GET | jq -r .uri)
        if [[ $uri == *"$lambda_arn"* ]]; then
            format_response $api_id
            exit 0
        fi
    done
done
